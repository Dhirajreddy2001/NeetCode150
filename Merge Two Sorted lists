Given 2 lists list 1, list 2.  Merge them together as a one sorted list.

Example :

1->2->4
1->3->4

Op: 1->1->2->3->4->4

Algorithm:

Step 1: Create a node (head ->null), create node temp -> head
Step 2: while list 1 not equal to null and list2 not equal to null
        Start if else where if( l1.val < l2.val)
                            {
                                temp = l1.val
                                l1 = l1.next
                            }
                          else{
                                temp = l2.val, l2 = l2.next}
Step 3: add any remaining part of l1, l2 to the temp
Step 4: return head 





Code:
class Solution {
    public static ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        ListNode head= new ListNode(0);
        ListNode temp=head;
        while(l1!=null && l2!=null)
        {
            if(l1.val<l2.val)
            {
                temp.next=l1;
                l1=l1.next;
            }
            else
            {
                temp.next=l2;
                l2=l2.next;
            }
            temp=temp.next;
        }
        if(l1!=null)
        {
          temp.next=l1;
            l1=l1.next;
        }
        if(l2!=null)
        {
            temp.next=l2;
            l2=l2.next;
        }
        return head.next;
    }
