Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

Algorithm:
Step 1: If both p and q are equal to null return true as both the trees are empty.
Step 2: Check either of p or q is null if any one is null and other has value then trees are not same
Step 3: if value of p not equal to value of q then the nodes are not identical and trees are not identical
Step 4: the is the recurssive condition that returns if both the trees are identical or not it checks if both right side of p,q and left side of p & q are qualo or not.



Code:
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {

        if( p == null && q == null) return true;
        if( p == null || q == null ) return false;

        if(p.val != q.val) return false;

        return isSameTree(p.left, q.left) && isSameTree(p.right,q.right);       
    }
}
